@model IEnumerable<HWeb.Models.Product>
@{
    ViewData["Title"] = "Kết quả tìm kiếm";
    var searchQuery = ViewData["SearchQuery"]?.ToString() ?? "";
    var currentPage = (int)(ViewData["CurrentPage"] ?? 1);
    var totalPages = (int)(ViewData["TotalPages"] ?? 1);
    var totalProducts = (int)(ViewData["TotalProducts"] ?? 0);
}

<div class="container">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Trang chủ</a></li>
            <li class="breadcrumb-item"><a asp-controller="Products" asp-action="Index">Sản phẩm</a></li>
            <li class="breadcrumb-item active" aria-current="page">Tìm kiếm</li>
        </ol>
    </nav>

    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div>
                    <h2 class="h4 mb-0">
                        <i class="fas fa-search me-2"></i>
                        Kết quả tìm kiếm cho "@searchQuery"
                    </h2>
                    <p class="text-muted mb-0">Tìm thấy @totalProducts sản phẩm</p>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Any())
    {
        <div class="row">
            @foreach (var product in Model)
            {
                <div class="col-lg-3 col-md-6 mb-4">
                    <div class="card h-100 product-card">
                        <div class="card-img-container">
                            @if (!string.IsNullOrEmpty(product.ImageUrl))
                            {
                                <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" style="height: 300px; object-fit: cover;">
                            }
                            else
                            {
                                <div class="card-img-placeholder d-flex align-items-center justify-content-center bg-light" style="height: 300px;">
                                    <i class="fas fa-tshirt text-muted fa-4x"></i>
                                </div>
                            }
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h6 class="card-title">@product.Name</h6>
                            @if (product.Category != null)
                            {
                                <small class="text-muted mb-2">@product.Category.Name</small>
                            }
                            <p class="card-text text-muted small flex-grow-1">
                                @if (!string.IsNullOrEmpty(product.ShortDescription))
                                {
                                    @(product.ShortDescription.Length > 100 ? product.ShortDescription.Substring(0, 100) + "..." : product.ShortDescription)
                                }
                                else
                                {
                                    <span class="text-muted">Chưa có mô tả</span>
                                }
                            </p>
                            <div class="d-flex justify-content-between align-items-center mt-auto">
                                <h6 class="text-primary mb-0">@product.Price.ToString("N0")đ</h6>
                                @if (product.Reviews.Any())
                                {
                                    <div class="rating">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fas fa-star @(i <= Math.Round(product.AverageRating) ? "text-warning" : "text-muted") fa-sm"></i>
                                        }
                                        <small class="text-muted ms-1">(@product.ReviewCount)</small>
                                    </div>
                                }
                            </div>
                            <div class="mt-3">
                                <a asp-action="Details" asp-route-id="@product.Id" class="btn btn-outline-primary btn-sm me-2">
                                    <i class="fas fa-eye me-1"></i>
                                    Xem chi tiết
                                </a>
                                <button class="btn btn-primary btn-sm" onclick="addToCart(@product.Id, 1)">
                                    <i class="fas fa-shopping-cart me-1"></i>
                                    Mua ngay
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (totalPages > 1)
        {
            <nav aria-label="Product pagination" class="mt-5">
                <ul class="pagination justify-content-center">
                    @if (currentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Search" asp-route-q="@searchQuery" asp-route-page="@(currentPage - 1)">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }

                    @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" asp-action="Search" asp-route-q="@searchQuery" asp-route-page="@i">@i</a>
                        </li>
                    }

                    @if (currentPage < totalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Search" asp-route-q="@searchQuery" asp-route-page="@(currentPage + 1)">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-search text-muted" style="font-size: 5rem;"></i>
            <h3 class="mt-3">Không tìm thấy sản phẩm nào</h3>
            <p class="text-muted">Không có sản phẩm nào phù hợp với từ khóa "@searchQuery"</p>
            <div class="mt-4">
                <a asp-action="Index" class="btn btn-primary me-2">
                    <i class="fas fa-arrow-left me-2"></i>
                    Xem tất cả sản phẩm
                </a>
                <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-home me-2"></i>
                    Về trang chủ
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function addToCart(productId, quantity) {
            $.ajax({
                url: '@Url.Action("AddToCart", "Cart")',
                type: 'POST',
                data: {
                    productId: productId,
                    quantity: quantity
                },
                success: function(response) {
                    if (response.success) {
                        showToast('success', response.message);
                        updateCartCount(response.cartCount);
                    } else {
                        showToast('error', response.message);
                    }
                },
                error: function() {
                    showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                }
            });
        }

        function updateCartCount(count) {
            const cartCountElements = document.querySelectorAll('.cart-count');
            cartCountElements.forEach(element => {
                element.textContent = count;
                if (count > 0) {
                    element.style.display = 'inline';
                } else {
                    element.style.display = 'none';
                }
            });
        }

        function showToast(type, message) {
            const toastClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const toast = document.createElement('div');
            toast.className = `alert ${toastClass} alert-dismissible fade show position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; max-width: 300px;';
            toast.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(function() {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 3000);
        }
    </script>
    
    <style>
        .product-card {
            transition: transform 0.2s, box-shadow 0.2s;
        }
        
        .product-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
    </style>
}
