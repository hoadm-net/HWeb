@model HWeb.Models.Order
@{
    ViewData["Title"] = "Chi tiết đơn hàng";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="fas fa-shopping-cart text-primary me-2"></i>
        Chi tiết đơn hàng #@Model.Id.ToString("D6")
    </h2>
    <div>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left me-2"></i>
            Quay lại
        </a>
        <a asp-action="Print" asp-route-id="@Model.Id" class="btn btn-outline-primary" target="_blank">
            <i class="fas fa-print me-2"></i>
            In đơn hàng
        </a>
    </div>
</div>

<div class="row">
    <!-- Order Information -->
    <div class="col-md-8">
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Thông tin đơn hàng</h5>
                <div>
                    @switch (Model.Status)
                    {
                        case OrderStatus.Pending:
                            <span class="badge bg-warning fs-6">@Model.StatusDisplayName</span>
                            break;
                        case OrderStatus.Confirmed:
                            <span class="badge bg-info fs-6">@Model.StatusDisplayName</span>
                            break;
                        case OrderStatus.Shipping:
                            <span class="badge bg-primary fs-6">@Model.StatusDisplayName</span>
                            break;
                        case OrderStatus.Delivered:
                            <span class="badge bg-success fs-6">@Model.StatusDisplayName</span>
                            break;
                        case OrderStatus.Cancelled:
                            <span class="badge bg-danger fs-6">@Model.StatusDisplayName</span>
                            break;
                    }
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <table class="table table-borderless">
                            <tr>
                                <td style="width: 150px;"><strong>Mã đơn hàng:</strong></td>
                                <td>#@Model.Id.ToString("D6")</td>
                            </tr>
                            <tr>
                                <td><strong>Ngày đặt:</strong></td>
                                <td>@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                            </tr>
                            <tr>
                                <td><strong>Trạng thái:</strong></td>
                                <td>@Model.StatusDisplayName</td>
                            </tr>
                            <tr>
                                <td><strong>Thanh toán:</strong></td>
                                <td>
                                    @Model.PaymentMethodDisplayName
                                    @if (Model.IsPaid)
                                    {
                                        <span class="badge bg-success ms-2">Đã thanh toán</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning ms-2">Chưa thanh toán</span>
                                    }
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <table class="table table-borderless">
                            @if (Model.ConfirmedAt.HasValue)
                            {
                                <tr>
                                    <td style="width: 150px;"><strong>Xác nhận lúc:</strong></td>
                                    <td>@Model.ConfirmedAt.Value.ToString("dd/MM/yyyy HH:mm")</td>
                                </tr>
                            }
                            @if (Model.ShippedAt.HasValue)
                            {
                                <tr>
                                    <td><strong>Giao hàng lúc:</strong></td>
                                    <td>@Model.ShippedAt.Value.ToString("dd/MM/yyyy HH:mm")</td>
                                </tr>
                            }
                            @if (Model.DeliveredAt.HasValue)
                            {
                                <tr>
                                    <td><strong>Hoàn thành lúc:</strong></td>
                                    <td>@Model.DeliveredAt.Value.ToString("dd/MM/yyyy HH:mm")</td>
                                </tr>
                            }
                            @if (Model.CancelledAt.HasValue)
                            {
                                <tr>
                                    <td><strong>Hủy lúc:</strong></td>
                                    <td>@Model.CancelledAt.Value.ToString("dd/MM/yyyy HH:mm")</td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Notes))
                {
                    <div class="mt-3">
                        <strong>Ghi chú:</strong>
                        <p class="text-muted">@Model.Notes</p>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.CancelReason))
                {
                    <div class="alert alert-danger mt-3">
                        <strong>Lý do hủy:</strong> @Model.CancelReason
                    </div>
                }
            </div>
        </div>

        <!-- Order Items -->
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Sản phẩm trong đơn hàng (@Model.TotalItems sản phẩm)</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Sản phẩm</th>
                                <th>Đơn giá</th>
                                <th>Số lượng</th>
                                <th>Thành tiền</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderItems)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(item.ProductImageUrl))
                                            {
                                                <img src="@item.ProductImageUrl" alt="@item.ProductName" 
                                                     class="rounded me-3" style="width: 60px; height: 60px; object-fit: cover;">
                                            }
                                            else
                                            {
                                                <div class="bg-light rounded me-3 d-flex align-items-center justify-content-center" 
                                                     style="width: 60px; height: 60px;">
                                                    <i class="fas fa-image text-muted"></i>
                                                </div>
                                            }
                                            <div>
                                                <strong>@item.ProductName</strong>
                                                @if (item.Product?.Category != null)
                                                {
                                                    <br><small class="text-muted">@item.Product.Category.Name</small>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                    <td class="align-middle">@item.UnitPrice.ToString("N0")đ</td>
                                    <td class="align-middle">@item.Quantity</td>
                                    <td class="align-middle"><strong>@item.TotalPrice.ToString("N0")đ</strong></td>
                                </tr>
                            }
                        </tbody>
                        <tfoot class="table-light">
                            <tr>
                                <th colspan="3">Tạm tính:</th>
                                <th>@Model.Subtotal.ToString("N0")đ</th>
                            </tr>
                            @if (Model.ShippingFee > 0)
                            {
                                <tr>
                                    <th colspan="3">Phí vận chuyển:</th>
                                    <th>@Model.ShippingFee.ToString("N0")đ</th>
                                </tr>
                            }
                            <tr class="table-primary">
                                <th colspan="3">Tổng cộng:</th>
                                <th class="text-primary">@Model.TotalAmount.ToString("N0")đ</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Customer Information & Actions -->
    <div class="col-md-4">
        <!-- Customer Info -->
        <div class="card mb-4">
            <div class="card-header">
                <h6 class="mb-0">Thông tin khách hàng</h6>
            </div>
            <div class="card-body">
                <div class="text-center mb-3">
                    <i class="fas fa-user-circle fa-3x text-muted"></i>
                </div>
                <p><strong>Tên:</strong> @Model.CustomerName</p>
                <p><strong>Email:</strong> @Model.CustomerEmail</p>
                <p><strong>Điện thoại:</strong> @Model.CustomerPhone</p>
                @if (Model.User != null)
                {
                    <p><strong>Tài khoản:</strong> Đã đăng ký</p>
                }
                else
                {
                    <p><strong>Tài khoản:</strong> Khách vãng lai</p>
                }
            </div>
        </div>

        <!-- Shipping Address -->
        <div class="card mb-4">
            <div class="card-header">
                <h6 class="mb-0">Địa chỉ giao hàng</h6>
            </div>
            <div class="card-body">
                <div class="text-center mb-3">
                    <i class="fas fa-map-marker-alt fa-2x text-primary"></i>
                </div>
                <p>@Model.ShippingAddress</p>
            </div>
        </div>

        <!-- Order Actions -->
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">Thao tác đơn hàng</h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    @if (Model.Status == OrderStatus.Pending)
                    {
                        <button class="btn btn-success" onclick="updateOrderStatus(@Model.Id, @((int)OrderStatus.Confirmed), 'Xác nhận đơn hàng này?')">
                            <i class="fas fa-check me-2"></i>
                            Xác nhận đơn hàng
                        </button>
                        <button class="btn btn-danger" onclick="cancelOrder(@Model.Id)">
                            <i class="fas fa-times me-2"></i>
                            Hủy đơn hàng
                        </button>
                    }
                    else if (Model.Status == OrderStatus.Confirmed)
                    {
                        <button class="btn btn-primary" onclick="updateOrderStatus(@Model.Id, @((int)OrderStatus.Shipping), 'Chuyển sang trạng thái đang giao hàng?')">
                            <i class="fas fa-shipping-fast me-2"></i>
                            Bắt đầu giao hàng
                        </button>
                    }
                    else if (Model.Status == OrderStatus.Shipping)
                    {
                        <button class="btn btn-success" onclick="updateOrderStatus(@Model.Id, @((int)OrderStatus.Delivered), 'Xác nhận đã giao hàng thành công?')">
                            <i class="fas fa-check-circle me-2"></i>
                            Hoàn thành giao hàng
                        </button>
                    }
                    
                    <a asp-action="Print" asp-route-id="@Model.Id" class="btn btn-outline-secondary" target="_blank">
                        <i class="fas fa-print me-2"></i>
                        In đơn hàng
                    </a>
                    
                    @if (Model.Status == OrderStatus.Cancelled)
                    {
                        <button class="btn btn-outline-danger" onclick="deleteOrder(@Model.Id)">
                            <i class="fas fa-trash me-2"></i>
                            Xóa đơn hàng
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateOrderStatus(orderId, newStatus, confirmMessage) {
            if (confirm(confirmMessage)) {
                $.ajax({
                    url: '@Url.Action("UpdateStatus", "Orders")',
                    type: 'POST',
                    data: { 
                        id: orderId, 
                        newStatus: newStatus 
                    },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function cancelOrder(orderId) {
            const reason = prompt('Lý do hủy đơn hàng:');
            if (reason !== null && reason.trim() !== '') {
                $.ajax({
                    url: '@Url.Action("UpdateStatus", "Orders")',
                    type: 'POST',
                    data: { 
                        id: orderId, 
                        newStatus: @((int)OrderStatus.Cancelled),
                        cancelReason: reason
                    },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function deleteOrder(orderId) {
            if (confirm('Bạn có chắc chắn muốn xóa đơn hàng này? Hành động này không thể hoàn tác.')) {
                $.ajax({
                    url: '@Url.Action("Delete", "Orders")',
                    type: 'POST',
                    data: { id: orderId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => window.location.href = '@Url.Action("Index", "Orders")', 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function showToast(type, message) {
            const toastClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const toast = document.createElement('div');
            toast.className = `alert ${toastClass} alert-dismissible fade show position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; max-width: 300px;';
            toast.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(function() {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 3000);
        }
    </script>
}
