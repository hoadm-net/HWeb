@model IEnumerable<HWeb.Models.Order>
@{
    ViewData["Title"] = "Quản lý đơn hàng";
    var currentStatus = ViewData["CurrentStatus"] as OrderStatus?;
    var currentPage = (int)(ViewData["CurrentPage"] ?? 1);
    var totalPages = (int)(ViewData["TotalPages"] ?? 1);
    var totalOrders = (int)(ViewData["TotalOrders"] ?? 0);
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="fas fa-shopping-cart text-primary me-2"></i>
        Quản lý đơn hàng
    </h2>
    <div>
        <a asp-action="Statistics" class="btn btn-info">
            <i class="fas fa-chart-bar me-2"></i>
            Thống kê
        </a>
    </div>
</div>

<!-- Filter tabs -->
<ul class="nav nav-pills mb-4">
    <li class="nav-item">
        <a class="nav-link @(currentStatus == null ? "active" : "")" 
           asp-action="Index">
            <i class="fas fa-list me-2"></i>
            Tất cả
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == OrderStatus.Pending ? "active" : "")" 
           asp-action="Index" asp-route-status="@OrderStatus.Pending">
            <i class="fas fa-clock me-2"></i>
            Chờ xác nhận
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == OrderStatus.Confirmed ? "active" : "")" 
           asp-action="Index" asp-route-status="@OrderStatus.Confirmed">
            <i class="fas fa-check me-2"></i>
            Đã xác nhận
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == OrderStatus.Shipping ? "active" : "")" 
           asp-action="Index" asp-route-status="@OrderStatus.Shipping">
            <i class="fas fa-shipping-fast me-2"></i>
            Đang giao hàng
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == OrderStatus.Delivered ? "active" : "")" 
           asp-action="Index" asp-route-status="@OrderStatus.Delivered">
            <i class="fas fa-check-circle me-2"></i>
            Đã giao hàng
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == OrderStatus.Cancelled ? "active" : "")" 
           asp-action="Index" asp-route-status="@OrderStatus.Cancelled">
            <i class="fas fa-times-circle me-2"></i>
            Đã hủy
        </a>
    </li>
</ul>

<div class="card">
    <div class="card-header">
        <h5 class="mb-0">
            Danh sách đơn hàng 
            <span class="badge bg-primary ms-2">@totalOrders</span>
        </h5>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Mã đơn hàng</th>
                            <th>Khách hàng</th>
                            <th>Tổng tiền</th>
                            <th>Trạng thái</th>
                            <th>Ngày đặt</th>
                            <th>Phương thức TT</th>
                            <th width="200">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td>
                                    <strong>#@order.Id.ToString("D6")</strong>
                                    <br>
                                    <small class="text-muted">@order.TotalItems sản phẩm</small>
                                </td>
                                <td>
                                    <strong>@order.CustomerName</strong>
                                    <br>
                                    <small class="text-muted">@order.CustomerEmail</small>
                                    <br>
                                    <small class="text-muted">@order.CustomerPhone</small>
                                </td>
                                <td>
                                    <strong class="text-primary">@order.TotalAmount.ToString("N0")đ</strong>
                                    @if (order.ShippingFee > 0)
                                    {
                                        <br><small class="text-muted">Phí ship: @order.ShippingFee.ToString("N0")đ</small>
                                    }
                                </td>
                                <td>
                                    @switch (order.Status)
                                    {
                                        case OrderStatus.Pending:
                                            <span class="badge bg-warning">@order.StatusDisplayName</span>
                                            break;
                                        case OrderStatus.Confirmed:
                                            <span class="badge bg-info">@order.StatusDisplayName</span>
                                            break;
                                        case OrderStatus.Shipping:
                                            <span class="badge bg-primary">@order.StatusDisplayName</span>
                                            break;
                                        case OrderStatus.Delivered:
                                            <span class="badge bg-success">@order.StatusDisplayName</span>
                                            break;
                                        case OrderStatus.Cancelled:
                                            <span class="badge bg-danger">@order.StatusDisplayName</span>
                                            break;
                                    }
                                    @if (order.IsPaid)
                                    {
                                        <br><span class="badge bg-success mt-1">Đã thanh toán</span>
                                    }
                                </td>
                                <td>
                                    @order.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                </td>
                                <td>
                                    <span class="badge bg-secondary">@order.PaymentMethodDisplayName</span>
                                </td>
                                <td>
                                    <div class="btn-group-vertical btn-group-sm" role="group">
                                        <a asp-action="Details" asp-route-id="@order.Id" 
                                           class="btn btn-outline-info btn-sm">
                                            <i class="fas fa-eye me-1"></i>Chi tiết
                                        </a>
                                        
                                        @if (order.Status == OrderStatus.Pending)
                                        {
                                            <button class="btn btn-outline-success btn-sm" 
                                                    onclick="updateOrderStatus(@order.Id, @((int)OrderStatus.Confirmed), 'Xác nhận đơn hàng này?')">
                                                <i class="fas fa-check me-1"></i>Xác nhận
                                            </button>
                                            <button class="btn btn-outline-danger btn-sm" 
                                                    onclick="cancelOrder(@order.Id)">
                                                <i class="fas fa-times me-1"></i>Hủy
                                            </button>
                                        }
                                        else if (order.Status == OrderStatus.Confirmed)
                                        {
                                            <button class="btn btn-outline-primary btn-sm" 
                                                    onclick="updateOrderStatus(@order.Id, @((int)OrderStatus.Shipping), 'Chuyển sang trạng thái đang giao hàng?')">
                                                <i class="fas fa-shipping-fast me-1"></i>Giao hàng
                                            </button>
                                        }
                                        else if (order.Status == OrderStatus.Shipping)
                                        {
                                            <button class="btn btn-outline-success btn-sm" 
                                                    onclick="updateOrderStatus(@order.Id, @((int)OrderStatus.Delivered), 'Xác nhận đã giao hàng?')">
                                                <i class="fas fa-check-circle me-1"></i>Đã giao
                                            </button>
                                        }
                                        
                                        <a asp-action="Print" asp-route-id="@order.Id" 
                                           class="btn btn-outline-secondary btn-sm" target="_blank">
                                            <i class="fas fa-print me-1"></i>In
                                        </a>
                                        
                                        @if (order.Status == OrderStatus.Cancelled)
                                        {
                                            <button class="btn btn-outline-danger btn-sm" 
                                                    onclick="deleteOrder(@order.Id)">
                                                <i class="fas fa-trash me-1"></i>Xóa
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <nav aria-label="Orders pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-status="@currentStatus" asp-route-page="@(currentPage - 1)">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-status="@currentStatus" asp-route-page="@i">@i</a>
                            </li>
                        }

                        @if (currentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-status="@currentStatus" asp-route-page="@(currentPage + 1)">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-shopping-cart text-muted" style="font-size: 4rem;"></i>
                <h4 class="mt-3">Không có đơn hàng nào</h4>
                <p class="text-muted">
                    @switch (currentStatus)
                    {
                        case OrderStatus.Pending:
                            @:Không có đơn hàng nào đang chờ xác nhận.
                            break;
                        case OrderStatus.Confirmed:
                            @:Không có đơn hàng nào đã được xác nhận.
                            break;
                        case OrderStatus.Shipping:
                            @:Không có đơn hàng nào đang được giao.
                            break;
                        case OrderStatus.Delivered:
                            @:Không có đơn hàng nào đã được giao.
                            break;
                        case OrderStatus.Cancelled:
                            @:Không có đơn hàng nào bị hủy.
                            break;
                        default:
                            @:Chưa có đơn hàng nào trong hệ thống.
                            break;
                    }
                </p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function updateOrderStatus(orderId, newStatus, confirmMessage) {
            if (confirm(confirmMessage)) {
                $.ajax({
                    url: '@Url.Action("UpdateStatus", "Orders")',
                    type: 'POST',
                    data: { 
                        id: orderId, 
                        newStatus: newStatus 
                    },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            location.reload();
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function cancelOrder(orderId) {
            const reason = prompt('Lý do hủy đơn hàng:');
            if (reason !== null) {
                $.ajax({
                    url: '@Url.Action("UpdateStatus", "Orders")',
                    type: 'POST',
                    data: { 
                        id: orderId, 
                        newStatus: @((int)OrderStatus.Cancelled),
                        cancelReason: reason
                    },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            location.reload();
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function deleteOrder(orderId) {
            if (confirm('Bạn có chắc chắn muốn xóa đơn hàng này? Hành động này không thể hoàn tác.')) {
                $.ajax({
                    url: '@Url.Action("Delete", "Orders")',
                    type: 'POST',
                    data: { id: orderId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            location.reload();
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function showToast(type, message) {
            const toastClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const toast = document.createElement('div');
            toast.className = `alert ${toastClass} alert-dismissible fade show position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; max-width: 300px;';
            toast.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(function() {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 3000);
        }
    </script>
}
