@model HWeb.Models.Review
@{
    ViewData["Title"] = "Chi tiết đánh giá";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="fas fa-star text-warning me-2"></i>
        Chi tiết đánh giá
    </h2>
    <a asp-action="Index" class="btn btn-secondary">
        <i class="fas fa-arrow-left me-2"></i>
        Quay lại
    </a>
</div>

<div class="row">
    <!-- Review Information -->
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Thông tin đánh giá</h5>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Tiêu đề:</strong></div>
                    <div class="col-sm-9">@Model.Title</div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Đánh giá:</strong></div>
                    <div class="col-sm-9">
                        <div class="rating">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="fas fa-star @(i <= Model.Rating ? "text-warning" : "text-muted")"></i>
                            }
                            <span class="ms-2">@Model.Rating/5 sao</span>
                        </div>
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Nội dung:</strong></div>
                    <div class="col-sm-9">
                        <div class="border p-3 bg-light rounded">
                            @Model.Comment
                        </div>
                    </div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Ngày tạo:</strong></div>
                    <div class="col-sm-9">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Trạng thái:</strong></div>
                    <div class="col-sm-9">
                        @if (Model.IsApproved)
                        {
                            <span class="badge bg-success fs-6">
                                <i class="fas fa-check me-1"></i>
                                Đã duyệt
                            </span>
                            @if (Model.ApprovedAt.HasValue)
                            {
                                <small class="text-muted ms-2">(@Model.ApprovedAt.Value.ToString("dd/MM/yyyy HH:mm"))</small>
                            }
                        }
                        else
                        {
                            <span class="badge bg-warning fs-6">
                                <i class="fas fa-clock me-1"></i>
                                Chờ duyệt
                            </span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Customer & Product Info -->
    <div class="col-md-4">
        <!-- Customer Info -->
        <div class="card mb-3">
            <div class="card-header">
                <h6 class="mb-0">Thông tin khách hàng</h6>
            </div>
            <div class="card-body">
                <div class="text-center mb-3">
                    <i class="fas fa-user-circle fa-3x text-muted"></i>
                </div>
                <p><strong>Tên:</strong> @Model.CustomerName</p>
                @if (Model.User != null)
                {
                    <p><strong>Email:</strong> @Model.User.Email</p>
                    <p><strong>Đã đăng ký:</strong> Có</p>
                }
                else
                {
                    <p><strong>Khách vãng lai:</strong> Chưa đăng ký</p>
                }
            </div>
        </div>

        <!-- Product Info -->
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">Thông tin sản phẩm</h6>
            </div>
            <div class="card-body">
                <div class="text-center mb-3">
                    @if (!string.IsNullOrEmpty(Model.Product.ImageUrl))
                    {
                        <img src="@Model.Product.ImageUrl" alt="@Model.Product.Name" 
                             class="img-fluid rounded" style="max-height: 150px;">
                    }
                    else
                    {
                        <i class="fas fa-image fa-3x text-muted"></i>
                    }
                </div>
                <h6 class="card-title">@Model.Product.Name</h6>
                @if (Model.Product.Category != null)
                {
                    <p class="text-muted mb-2">
                        <i class="fas fa-tag me-1"></i>
                        @Model.Product.Category.Name
                    </p>
                }
                <p class="text-primary">
                    <strong>@Model.Product.Price.ToString("N0")đ</strong>
                </p>
                <div class="mt-3">
                    <a asp-controller="Products" asp-action="Details" asp-route-id="@Model.Product.Id" 
                       class="btn btn-outline-primary btn-sm me-2" target="_blank">
                        <i class="fas fa-external-link-alt me-1"></i>
                        Xem sản phẩm
                    </a>
                    <a asp-action="ProductReviews" asp-route-productId="@Model.Product.Id" 
                       class="btn btn-outline-info btn-sm">
                        <i class="fas fa-comments me-1"></i>
                        Tất cả đánh giá
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Action Buttons -->
<div class="card mt-4">
    <div class="card-body">
        <div class="d-flex justify-content-center gap-3">
            @if (!Model.IsApproved)
            {
                <button class="btn btn-success" onclick="approveReview(@Model.Id)">
                    <i class="fas fa-check me-2"></i>
                    Duyệt đánh giá
                </button>
            }
            else
            {
                <button class="btn btn-warning" onclick="rejectReview(@Model.Id)">
                    <i class="fas fa-times me-2"></i>
                    Hủy duyệt
                </button>
            }
            
            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                <i class="fas fa-trash me-2"></i>
                Xóa đánh giá
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function approveReview(reviewId) {
            if (confirm('Bạn có chắc muốn duyệt đánh giá này?')) {
                $.ajax({
                    url: '@Url.Action("Approve", "Reviews")',
                    type: 'POST',
                    data: { id: reviewId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function rejectReview(reviewId) {
            if (confirm('Bạn có chắc muốn hủy duyệt đánh giá này?')) {
                $.ajax({
                    url: '@Url.Action("Reject", "Reviews")',
                    type: 'POST',
                    data: { id: reviewId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function showToast(type, message) {
            const toastClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const toast = document.createElement('div');
            toast.className = `alert ${toastClass} alert-dismissible fade show position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; max-width: 300px;';
            toast.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(function() {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 3000);
        }
    </script>
}
