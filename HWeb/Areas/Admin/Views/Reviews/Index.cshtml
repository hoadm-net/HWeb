@model IEnumerable<HWeb.Models.Review>
@{
    ViewData["Title"] = "Quản lý đánh giá";
    var currentStatus = ViewData["CurrentStatus"]?.ToString() ?? "pending";
    var currentPage = (int)(ViewData["CurrentPage"] ?? 1);
    var totalPages = (int)(ViewData["TotalPages"] ?? 1);
    var totalReviews = (int)(ViewData["TotalReviews"] ?? 0);
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="fas fa-star text-warning me-2"></i>
        Quản lý đánh giá
    </h2>
    <div>
        <a asp-action="Statistics" class="btn btn-info">
            <i class="fas fa-chart-bar me-2"></i>
            Thống kê
        </a>
    </div>
</div>

<!-- Filter tabs -->
<ul class="nav nav-pills mb-4">
    <li class="nav-item">
        <a class="nav-link @(currentStatus == "pending" ? "active" : "")" 
           asp-action="Index" asp-route-status="pending">
            <i class="fas fa-clock me-2"></i>
            Chờ duyệt
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == "approved" ? "active" : "")" 
           asp-action="Index" asp-route-status="approved">
            <i class="fas fa-check me-2"></i>
            Đã duyệt
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(currentStatus == "all" ? "active" : "")" 
           asp-action="Index" asp-route-status="all">
            <i class="fas fa-list me-2"></i>
            Tất cả
        </a>
    </li>
</ul>

<div class="card">
    <div class="card-header">
        <h5 class="mb-0">
            Danh sách đánh giá 
            <span class="badge bg-primary ms-2">@totalReviews</span>
        </h5>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Sản phẩm</th>
                            <th>Khách hàng</th>
                            <th>Đánh giá</th>
                            <th>Tiêu đề</th>
                            <th>Ngày tạo</th>
                            <th>Trạng thái</th>
                            <th width="200">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var review in Model)
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        @if (!string.IsNullOrEmpty(review.Product.ImageUrl))
                                        {
                                            <img src="@review.Product.ImageUrl" alt="@review.Product.Name" 
                                                 class="rounded me-2" style="width: 40px; height: 40px; object-fit: cover;">
                                        }
                                        <div>
                                            <strong>@review.Product.Name</strong>
                                            <br>
                                            <small class="text-muted">ID: @review.Product.Id</small>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <strong>@review.CustomerName</strong>
                                    @if (review.User != null)
                                    {
                                        <br><small class="text-muted">@review.User.Email</small>
                                    }
                                </td>
                                <td>
                                    <div class="rating">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></i>
                                        }
                                        <span class="ms-1">(@review.Rating/5)</span>
                                    </div>
                                </td>
                                <td>
                                    <strong>@review.Title</strong>
                                    <br>
                                    <small class="text-muted">
                                        @(review.Comment.Length > 50 ? review.Comment.Substring(0, 50) + "..." : review.Comment)
                                    </small>
                                </td>
                                <td>
                                    @review.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                </td>
                                <td>
                                    @if (review.IsApproved)
                                    {
                                        <span class="badge bg-success">Đã duyệt</span>
                                        @if (review.ApprovedAt.HasValue)
                                        {
                                            <br><small class="text-muted">@review.ApprovedAt.Value.ToString("dd/MM/yyyy")</small>
                                        }
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">Chờ duyệt</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group-vertical btn-group-sm" role="group">
                                        <a asp-action="Details" asp-route-id="@review.Id" 
                                           class="btn btn-outline-info btn-sm">
                                            <i class="fas fa-eye me-1"></i>Chi tiết
                                        </a>
                                        
                                        @if (!review.IsApproved)
                                        {
                                            <button class="btn btn-outline-success btn-sm" 
                                                    onclick="approveReview(@review.Id)">
                                                <i class="fas fa-check me-1"></i>Duyệt
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-outline-warning btn-sm" 
                                                    onclick="rejectReview(@review.Id)">
                                                <i class="fas fa-times me-1"></i>Hủy duyệt
                                            </button>
                                        }
                                        
                                        <a asp-action="Delete" asp-route-id="@review.Id" 
                                           class="btn btn-outline-danger btn-sm">
                                            <i class="fas fa-trash me-1"></i>Xóa
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <nav aria-label="Reviews pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-status="@currentStatus" asp-route-page="@(currentPage - 1)">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-status="@currentStatus" asp-route-page="@i">@i</a>
                            </li>
                        }

                        @if (currentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-action="Index" asp-route-status="@currentStatus" asp-route-page="@(currentPage + 1)">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-comments text-muted" style="font-size: 4rem;"></i>
                <h4 class="mt-3">Không có đánh giá nào</h4>
                <p class="text-muted">
                    @switch (currentStatus)
                    {
                        case "pending":
                            @:Không có đánh giá nào đang chờ duyệt.
                            break;
                        case "approved":
                            @:Không có đánh giá nào đã được duyệt.
                            break;
                        default:
                            @:Chưa có đánh giá nào trong hệ thống.
                            break;
                    }
                </p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function approveReview(reviewId) {
            if (confirm('Bạn có chắc muốn duyệt đánh giá này?')) {
                $.ajax({
                    url: '@Url.Action("Approve", "Reviews")',
                    type: 'POST',
                    data: { id: reviewId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            location.reload();
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function rejectReview(reviewId) {
            if (confirm('Bạn có chắc muốn hủy duyệt đánh giá này?')) {
                $.ajax({
                    url: '@Url.Action("Reject", "Reviews")',
                    type: 'POST',
                    data: { id: reviewId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            location.reload();
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function showToast(type, message) {
            const toastClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const toast = document.createElement('div');
            toast.className = `alert ${toastClass} alert-dismissible fade show position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; max-width: 300px;';
            toast.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(function() {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 3000);
        }
    </script>
}
