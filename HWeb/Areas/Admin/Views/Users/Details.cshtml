@model ApplicationUser
@using HWeb.Models
@{
    ViewData["Title"] = "Chi tiết người dùng";
    var userRoles = ViewBag.UserRoles as IList<string> ?? new List<string>();
    var userOrders = ViewBag.UserOrders as List<Order> ?? new List<Order>();
    var userReviews = ViewBag.UserReviews as List<Review> ?? new List<Review>();
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="fas fa-user text-primary me-2"></i>
        Chi tiết người dùng
    </h2>
    <div>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left me-2"></i>
            Quay lại
        </a>
    </div>
</div>

<div class="row">
    <!-- User Information -->
    <div class="col-lg-4">
        <div class="card mb-4">
            <div class="card-body text-center">
                <div class="rounded-circle bg-primary text-white d-flex align-items-center justify-content-center mx-auto mb-3"
                     style="width: 80px; height: 80px; font-size: 2rem;">
                    <i class="fas fa-user"></i>
                </div>
                <h4 class="mb-1">@($"{Model.FirstName} {Model.LastName}".Trim())</h4>
                <p class="text-muted mb-3">@Model.UserName</p>
                
                @{
                    var isLocked = Model.LockoutEnd != null && Model.LockoutEnd > DateTimeOffset.UtcNow;
                }
                
                @if (isLocked)
                {
                    <span class="badge bg-danger fs-6">
                        <i class="fas fa-lock me-1"></i>Tài khoản bị khóa
                    </span>
                }
                else
                {
                    <span class="badge bg-success fs-6">
                        <i class="fas fa-unlock me-1"></i>Tài khoản hoạt động
                    </span>
                }
            </div>
        </div>

        <!-- User Roles -->
        <div class="card mb-4">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="fas fa-user-tag me-2"></i>
                    Quyền hạn (Roles)
                </h6>
            </div>
            <div class="card-body">
                @if (userRoles.Any())
                {
                    @foreach (var role in userRoles)
                    {
                        <span class="badge bg-@(role == "Admin" ? "danger" : "primary") me-2 mb-2 fs-6">
                            @role
                            <button class="btn-close btn-close-white ms-2" 
                                    onclick="removeRole('@Model.Id', '@role')" 
                                    title="Xóa role"></button>
                        </span>
                    }
                }
                else
                {
                    <p class="text-muted">Chưa có quyền hạn nào</p>
                }
                
                <hr>
                <div class="dropdown">
                    <button class="btn btn-outline-primary btn-sm dropdown-toggle w-100" 
                            data-bs-toggle="dropdown">
                        <i class="fas fa-plus me-1"></i>
                        Thêm Role
                    </button>
                    <ul class="dropdown-menu w-100">
                        <li><a class="dropdown-item" onclick="assignRole('@Model.Id', 'Admin')">Admin</a></li>
                        <li><a class="dropdown-item" onclick="assignRole('@Model.Id', 'User')">User</a></li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="fas fa-cog me-2"></i>
                    Thao tác nhanh
                </h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    @if (isLocked)
                    {
                        <button class="btn btn-success" onclick="toggleLockout('@Model.Id', false)">
                            <i class="fas fa-unlock me-2"></i>
                            Mở khóa tài khoản
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-warning" onclick="toggleLockout('@Model.Id', true)">
                            <i class="fas fa-lock me-2"></i>
                            Khóa tài khoản
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- User Details & Activity -->
    <div class="col-lg-8">
        <!-- Personal Information -->
        <div class="card mb-4">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="fas fa-info-circle me-2"></i>
                    Thông tin cá nhân
                </h6>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Email:</strong></div>
                    <div class="col-sm-9">
                        @Model.Email
                        @if (Model.EmailConfirmed)
                        {
                            <span class="badge bg-success ms-2">Đã xác thực</span>
                        }
                        else
                        {
                            <span class="badge bg-warning ms-2">Chưa xác thực</span>
                        }
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Số điện thoại:</strong></div>
                    <div class="col-sm-9">
                        @(string.IsNullOrEmpty(Model.PhoneNumber) ? "Chưa cập nhật" : Model.PhoneNumber)
                        @if (!string.IsNullOrEmpty(Model.PhoneNumber) && Model.PhoneNumberConfirmed)
                        {
                            <span class="badge bg-success ms-2">Đã xác thực</span>
                        }
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Tên:</strong></div>
                    <div class="col-sm-9">@Model.FirstName</div>
                </div>
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Họ:</strong></div>
                    <div class="col-sm-9">@Model.LastName</div>
                </div>
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Ngày tham gia:</strong></div>
                    <div class="col-sm-9">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</div>
                </div>
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Lần đăng nhập cuối:</strong></div>
                    <div class="col-sm-9">@(Model.LockoutEnd?.ToString("dd/MM/yyyy HH:mm") ?? "Không có thông tin")</div>
                </div>
                <div class="row">
                    <div class="col-sm-3"><strong>Trạng thái 2FA:</strong></div>
                    <div class="col-sm-9">
                        @if (Model.TwoFactorEnabled)
                        {
                            <span class="badge bg-success">Đã bật</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Chưa bật</span>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0">@ViewBag.TotalOrders</h4>
                                <small>Tổng đơn hàng</small>
                            </div>
                            <i class="fas fa-shopping-cart fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h4 class="mb-0">@ViewBag.TotalReviews</h4>
                                <small>Tổng đánh giá</small>
                            </div>
                            <i class="fas fa-star fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card bg-info text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                @{
                                    var totalSpent = userOrders.Where(o => o.Status == OrderStatus.Delivered).Sum(o => o.TotalAmount);
                                }
                                <h4 class="mb-0">@totalSpent.ToString("N0")đ</h4>
                                <small>Tổng chi tiêu</small>
                            </div>
                            <i class="fas fa-dollar-sign fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Orders -->
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h6 class="mb-0">
                    <i class="fas fa-shopping-cart me-2"></i>
                    Đơn hàng gần đây
                </h6>
                <a asp-controller="Orders" asp-action="Index" asp-route-userId="@Model.Id" 
                   class="btn btn-sm btn-outline-primary">
                    Xem tất cả
                </a>
            </div>
            <div class="card-body">
                @if (userOrders.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Mã đơn</th>
                                    <th>Ngày</th>
                                    <th>Tổng tiền</th>
                                    <th>Trạng thái</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in userOrders)
                                {
                                    <tr>
                                        <td>
                                            <a asp-controller="Orders" asp-action="Details" asp-route-id="@order.Id">
                                                #@order.Id.ToString("D6")
                                            </a>
                                        </td>
                                        <td>@order.CreatedAt.ToString("dd/MM/yyyy")</td>
                                        <td>@order.TotalAmount.ToString("N0")đ</td>
                                        <td>
                                            @switch (order.Status)
                                            {
                                                case OrderStatus.Pending:
                                                    <span class="badge bg-warning">@order.StatusDisplayName</span>
                                                    break;
                                                case OrderStatus.Confirmed:
                                                    <span class="badge bg-info">@order.StatusDisplayName</span>
                                                    break;
                                                case OrderStatus.Shipping:
                                                    <span class="badge bg-primary">@order.StatusDisplayName</span>
                                                    break;
                                                case OrderStatus.Delivered:
                                                    <span class="badge bg-success">@order.StatusDisplayName</span>
                                                    break;
                                                case OrderStatus.Cancelled:
                                                    <span class="badge bg-danger">@order.StatusDisplayName</span>
                                                    break;
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <p class="text-muted text-center">Chưa có đơn hàng nào.</p>
                }
            </div>
        </div>

        <!-- Recent Reviews -->
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h6 class="mb-0">
                    <i class="fas fa-star me-2"></i>
                    Đánh giá gần đây
                </h6>
                <a asp-controller="Reviews" asp-action="Index" asp-route-userId="@Model.Id" 
                   class="btn btn-sm btn-outline-primary">
                    Xem tất cả
                </a>
            </div>
            <div class="card-body">
                @if (userReviews.Any())
                {
                    @foreach (var review in userReviews)
                    {
                        <div class="border-start border-4 border-@(review.IsApproved ? "success" : "warning") p-3 mb-3 bg-light">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <div>
                                    <h6 class="mb-1">@review.Title</h6>
                                    <small class="text-muted">@review.Product.Name</small>
                                </div>
                                <div class="text-end">
                                    <div class="rating mb-1">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted") fa-sm"></i>
                                        }
                                    </div>
                                    @if (review.IsApproved)
                                    {
                                        <span class="badge bg-success">Đã duyệt</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">Chờ duyệt</span>
                                    }
                                </div>
                            </div>
                            <p class="text-muted mb-2 small">
                                @(review.Comment.Length > 100 ? review.Comment.Substring(0, 100) + "..." : review.Comment)
                            </p>
                            <small class="text-muted">@review.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted text-center">Chưa có đánh giá nào.</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Reuse functions from Index view
        function toggleLockout(userId, shouldLock) {
            const action = shouldLock ? 'khóa' : 'mở khóa';
            if (confirm(`Bạn có chắc chắn muốn ${action} tài khoản này?`)) {
                $.ajax({
                    url: '@Url.Action("ToggleLockout")',
                    type: 'POST',
                    data: { userId: userId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function assignRole(userId, roleName) {
            if (confirm(`Bạn có chắc chắn muốn thêm role '${roleName}' cho người dùng này?`)) {
                $.ajax({
                    url: '@Url.Action("AssignRole")',
                    type: 'POST',
                    data: { userId: userId, roleName: roleName },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function removeRole(userId, roleName) {
            if (confirm(`Bạn có chắc chắn muốn xóa role '${roleName}' của người dùng này?`)) {
                $.ajax({
                    url: '@Url.Action("RemoveRole")',
                    type: 'POST',
                    data: { userId: userId, roleName: roleName },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showToast('success', response.message);
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast('error', response.message);
                        }
                    },
                    error: function() {
                        showToast('error', 'Có lỗi xảy ra. Vui lòng thử lại.');
                    }
                });
            }
        }

        function showToast(type, message) {
            const toastClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const toast = document.createElement('div');
            toast.className = `alert ${toastClass} alert-dismissible fade show position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; max-width: 300px;';
            toast.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(function() {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 3000);
        }
    </script>
}
